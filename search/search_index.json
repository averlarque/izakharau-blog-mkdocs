{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Blog Posts","text":"<p>{{ blog_content }}</p>"},{"location":"about/","title":"About","text":"<p>Hi,</p> <p>My name is Ilya Zakharau, and I am a Product Manager and Product Owner in a B2B insurtech company. My domain is the Digital Experience: helping teams to quickly adapt product APIs to customer needs and 3rd parties integrations.</p> <p>I have been writing on my blog for several years already. There was no specific agenda, just what I was interested in at the moment. Since I have streamlined the following topics to focus more on:</p> <p>API: I am working on building and managing transformations in the API layer to adapt the digital experience for specific customer needs. So APIs and everything related is my point of interest.</p> <p>Low/No-Code: I am also working on the low and no-code tooling for the API layer transformations. So I keep an eye on the low/no-code industry as well.</p> <p>Product Management: I am a Product Manager. It is quite a new role, but I would love to share my learnings on that path.</p> <p>Product Ownership: I am also a Product Owner with experience managing a product backlog, refinements, documentation, user stories, etc.</p> <p>Business Analysis: I dedicated a part of my career to Business and System Analysis. Even though I am focused on product management, I am still managing and mentoring business analysts, plus working with the requirements from a higher perspective.</p> <p>Career Development: I am not trying to do career coaching. But I can give some pieces of advice or suggest an interesting reading. For free.</p> <p>Writing essays is my way to streamline the experience, self-reflection, and information pieces into something structured. Posting helps to improve the quality of text and makes me feel the commitment to a Reader. Also, I enjoy public speaking, but writing allows me to dive into details. I am revising my previous speeches and exploring some topics in written form.</p> <p>Here are a few additional facts about me:</p> <ul> <li>I have Bachelor's degrees in Linguistics (interpretation &amp; literary translation - English, and French) and Economics (logistics).</li> <li>I started my IT career as an L1 Support Engineer back in 2014</li> <li>Then I switched to a Business Analyst role and worked for five years in outsourcing and product companies on various projects.</li> <li>Most of my projects and products have been B2B Enterprise related.</li> <li>I am usually involved in technically advanced endeavors. That is why I have knowledge of Python, SQL, RESTful APIs, etc. My current goal is to learn Go.</li> </ul> <p>I hope you find something valuable here. You can also find me on LinkedIn and Twitter.</p>"},{"location":"announcements/","title":"Announcements","text":"<p>{{ blog_content announcements }}</p>"},{"location":"api-experience/","title":"API Design Overview","text":"<p>In 2022 I started exploring the API design-first approach and dedicated to this topic a series of articles on Linkedin (1, 2, 3, 4). I have revised the entire material and published the enhanced version on my blog.</p> <p>The enhanced version is more structured and has better language. Also, I rewrote some sections for more clarity. If you have already read those articles on LinkedIn, I encourage you to revisit them here.</p> <p>I decided to choose a more common term, API design, to entitle the series. Because of that, the series with a few articles might get more content in the future.</p> <p>It will be helpful for those Business Analysts, Product Owners, and Product Managers who want to learn more about API design concepts, tools, and find useful materials to continue the study.</p>"},{"location":"api-experience/#part-1-definition-of-api-requirements","title":"Part 1. Definition of API Requirements","text":"<p>An introduction to the API world, where we cover the following:</p> <ul> <li>why do we need to write requirements for API</li> <li>basic API terms you need to know</li> <li>what is API definition, API contract, and request logic</li> </ul>"},{"location":"api-experience/#part-2-non-functional-requirements-and-api","title":"Part 2. Non-functional Requirements and API","text":"<p>Here we talk about quality attributes for API (aka non-functional requirements):</p> <ul> <li>security</li> <li>reliability</li> <li>performance</li> <li>usability</li> <li>maintainability</li> <li>compliance</li> </ul>"},{"location":"api-experience/#part-3-api-design-first","title":"Part 3. API Design-First","text":"<p>In this article, we explore the following:</p> <ul> <li>why API definition is involved</li> <li>what API design-first means</li> <li>what are the benefits</li> <li>what are the disadvantages</li> <li>where should you go to learn to design API</li> </ul>"},{"location":"api-experience/#part-4-api-design-tooling","title":"Part 4. API Design Tooling","text":"<p>In this article, we review six low-code and no-code tools to design your API quickly and for free:</p> <ul> <li>Swagger Editor</li> <li>Postman</li> <li>Insomnia</li> <li>Stoplight</li> <li>Apicurio</li> <li>Apibldr</li> </ul>"},{"location":"api-experience/#part-5-backward-compatibility","title":"Part 5. Backward Compatibility","text":"<p>Here we learn how to avoid breaking changes, if possible</p>"},{"location":"business-analysis/ba-po/","title":"Essays about Business Analysis and Product Ownership","text":"<p>Here are my recent publications relared to the topic:</p>"},{"location":"business-analysis/ba-po/#requirements-and-api","title":"Requirements and API","text":"<ul> <li>Definition of API Requirements: the best place to start if you are a BA/PO who is not very familiar with APIs</li> <li>Non-functional Requirements and API: learn about quality characteristics required for APIs</li> <li>Backward compatibility: very important topic to keep everyone aligned and happy</li> </ul>"},{"location":"business-analysis/ba-po/#career-tips","title":"Career Tips","text":"<ul> <li>Pre-interview tips for Junior Business Analysts: some advices after I interviewed several candidates</li> <li>How I overcame my obsession with performance metrics: metrics are important but don't overestimate them</li> </ul>"},{"location":"business-analysis/ba-po/#books","title":"Books","text":"<ul> <li>Thoughts about J. Gharajedaghi\u2019s \"System Thinking\": complex but very interesting reading</li> </ul>"},{"location":"posts/api-design-first/","title":"API Design-First","text":"<p>This article is a part of the API Design series, where I will uncover API design concepts for my non-technical peers. You don't need to be a developer or an architect to participate to design or even build an API, but there is something you should learn to succeed.</p> <p>So we start with API design-first, which takes the opportunity to democratize the API development process.</p>","tags":["API Design"]},{"location":"posts/api-design-first/#api-definition","title":"API Definition","text":"<p>Let's take a step back to explore the term \"API definition.\" I will take some points from my \"Definition of API requirements\" essay to keep all the needed information in one text.</p> <p>So, the API definition is a documented API contract - an agreement about expected input and outcome between you (API provider) and your clients who consume your API. API communication is formalized with the contract documented in a specific format. It covers what data should be sent to a particular web address and what is expected to return as a successful or failed response.</p> <p>Many types of such formats are usually technically-driven. OpenAPI (previously known as Swagger) is the most common way to specify RESTful API, so that I will refer to it. You should study that format if you need to work with APIs. OpenAPI is not covered here, but later I will guide you on how to approach that study.</p> <p>So in our case, a JSON or YAML file with the contents aligned with OpenAPI specification acts as the API definition. The definition does not mean implementation. Our API can be defined on \"paper\" but does not yet exist as a deployed code running on a web server. It is important to separate those meanings like we separate requirements as a description of a system from the actual implementation.</p>","tags":["API Design"]},{"location":"posts/api-design-first/#what-api-design-first-means","title":"What API design-first means","text":"<p>API definition has two dimensions:</p> <p>Documentation: You can have API implementation with code and then autogenerate API definition to reflect the actual implementation. It is also called \"code-first\" and is a more traditional approach.</p> <p>Specification: You can design API definitions with your hands in a Notepad or use advanced tools to produce such machine-readable formats as OpenAPI. That allows autogenerating code for both the client and server sides. Or you can still develop it manually. Both ways lies in the concept we call \"API design-first.\"</p> <p>API definition can mediate between business logic, domain models, and UI. It can't cover them all, but there is no need for that. That can be considered a business analysis (BA) artifact, which may better transcribe business-to-system requirements than several written text lines.</p> <p></p> <p>Designing API definition helps to crystalize the data model and the operations to make your application functional. It is a ready-made contract between the backend and UI or API consumers. Such traditional BA artifacts as use cases, Entity-Relationship diagrams, and UI mockups are still required to specify the system requirements.</p> <p>I am usually advocating to keep a separate line between Requirements and Design. API definition lies between \"What?\" and \"How?\". It does not answer those questions for an entire system. But that might be beneficial if API is crucial in delivering value to your customers.</p>","tags":["API Design"]},{"location":"posts/api-design-first/#rise-of-api-design-first","title":"Rise of API design-first","text":"<p>I think it is related to the rising popularity of the \"API economy.\" It is climbing to the \"hype\" train. I googled \"Forbes about API,\" and on the first page, I found six(!) Forbes articles about APIs published in 2022 (1,\u00a02,\u00a03,\u00a04,\u00a05,\u00a06). Forbes as a media and API are very distant from each other worlds. It proves the increasing interest in everything related to APIs.</p> <p>Thus, API design-first is also a part of this trend. Now we talk more about APIs and try to revisit some traditional approaches. There is a new market of tools to replace regular API development or integration with more user and business-friendly solutions.</p>","tags":["API Design"]},{"location":"posts/api-design-first/#when-you-dont-need-this","title":"When you don't need this","text":"<p>To fully understand the concept, you need to focus on its disadvantages more than its advantages. There is a bulletproof fact: despite trends, the industry has been developing software without API design-first for dozens of years and will continue doing that.</p> <p>The API design-first approach can be an overhead in a case when:</p> <p>1) There are internal APIs only / no time for that</p> <p>I can hardly imagine a viable system without an API exposed to 3rd parties. But if we consider this case, API design-first is hard to sell here. If API is only used by the UI application, why do you need to spend time designing API with stakeholders before coding? Especially when we are talking about small or medium-sized applications.</p> <p>Also, you need more time to design API. For sure, it is an overhead. If it is outside your initial plans, then it is unlikely to spend any effort on that. That might end up as a technical debt. But there is always a price we pay for the rush.</p> <p>2) No API conventions on the team or organizational level</p> <p>Having API conventions is crucial in any case: whether you design or code first. Without the conventions, you are doomed to redesign API repeatedly, trying to match pieces of broken glass. For an API in production that might end up with breaking changes. And no one likes breaking changes (I wrote the\u00a0essay\u00a0dedicated to that).</p> <p>3) Lacks stakeholder involvement/lack of knowledge in API</p> <p>API design-first is about collaboration among stakeholders. If API is not a priority for them, then the API design phase can be delegated to developers while implementing those APIs (or a little prior).</p> <p>Another case is when stakeholders are willing to participate but can't speak \"API language.\" OpenAPI, for instance, can be used as such a language. But learning a language needs personal effort. Not talking about mastering the OpenAPI specifics, just understanding the basic concepts (grammar) and the ability to express yourself and understand others.</p> <p>Thus, if stakeholders want to be involved in the API design but do not speak an API language or speak another API language (e.g., SOAP), there should be time dedicated to learning.</p> <p>4) (Very) extensive system</p> <p>To finalize some skepticism, applying the design-first approach for a very extensive system that may include hundreds of microservices is not reasonable. Spending time designing the API of each specific microservice is not the best idea. You'd better spend time creating templates or boilerplates for API facades. Some business-sensitive APIs can be designed, considering the specifics: security, customer needs, and government regulations.</p>","tags":["API Design"]},{"location":"posts/api-design-first/#where-to-learn-about-designing-api","title":"Where to learn about designing API","text":"<p>Whether you have decided to apply the API design-first or are just interested in learning more about API, there is a proven-by-me list of resources to help you:</p> <ul> <li>A brilliant free\u00a0course\u00a0published at\u00a0https://idratherbewriting.com. It is designed primarily for technical writers, but this material suits any non-developer role. It has become a part of the mandatory onboarding for Business Analysts and even UX designers in my team. The course itself is immense. You will be enough with the first five chapters. I am most grateful to the author, Tom Johnson, for his great work.</li> <li>If you want to dive deeper into the topic, I can recommend \"The API\" by Sergey Konstantinov. It is free and available both in\u00a0English\u00a0and\u00a0Russian. The primary audience is API developers, but it is also good reading for System Analysts.</li> <li>Code Academy has a paid course, \"API Development with Swagger and OpenAPI\".</li> <li>There is also a book titled \"Continuous API Management\". I have read the first half of the 1st edition. Still, this is a more general reading for managers mainly. I will resume reading 2nd edition.</li> <li>And\u00a0OpenAPI specification\u00a0itself. The latest version on December 2022 is 3.1.0, even though it has yet to be very common. OpenAPI 3.0 and its previous iteration, Swagger 2.x, are still used in the industry.</li> <li>As a prerequisite, you must learn the basics of JSON, YAML, and XML formats. You'd better have a general notion of primitive data types: strings, integers, arrays, etc. There is plenty of available videos covering those topics on Youtube.</li> </ul>","tags":["API Design"]},{"location":"posts/api-design-first/#outro","title":"Outro","text":"<p>I decided to explore that topic as I followed API design-first for one of my side projects for a simple reason: autogenerate client and server-side code. As I am not a developer, that helps me to save a lot of effort.</p> <p>In the following essay, I review some free low-code and no-code solutions for API design.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/","title":"API Design Tooling","text":"<p>This article is a part of the API Design series, where I will review several API design tools and summarize my experiences. There are the following criteria I use in selecting and evaluating the tools:</p> <ul> <li>it is free: either open source or a free plan of a paid product</li> <li>out-of-the-box functionality is considered only: no plugins</li> <li>both web and desktop products are considered</li> <li>it allows designing REST API definition in OpenAPI 3.x with JSON/YAML (low-code), UI means (no-code), or a combination of both</li> <li>code generation functionality is not required as there are several 3rd party libraries to do that</li> </ul> <p>I am not promoting, just expressing my honest opinion. But I might have my favorites. Also, I will describe these tools at the moment of December 2022.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#low-code-tools","title":"Low-code tools","text":"<p>Low-code means that you can design an API in a code editor but not using Java, Python, or another programming. There is a higher-level language, usually called a Domain-Specific Language (DSL). OpenAPI is such a DSL used in the API design tools.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#swagger-editor","title":"Swagger Editor","text":"<p>It is a default option for designing API with the OpenAPI specification. OpenAPI is formerly known as Swagger until version 3.0. Swagger Editor comes from the company that founded that initiative.</p> <p>Swagger Editor\u00a0is available on a web browser and can run on a local machine. You need Node.js, an NPM package manager, and a few trivial command-line manipulations for the latter.</p> <p></p> <p>It works with both YAML and JSON, which is very convenient. You can define API components via UI forms, so we are stepping on the no-code grounds. However, UX could be better there.</p> <p>One of the most significant advantages is that you can immediately generate client and server-side code for multiple programming languages (Python, Go, Kotlin, Java, etc.) after finishing the design part. I will not judge the quality of the autogenerated code - not an expert. But this is an excellent option to deploy and test your APIs quickly.</p> <p>The main disadvantage is the absence of autocomplete functionality in the code editor. For some people, like me, it is a crucial one. But fortunately, this will no longer be the case because of the available\u00a0beta\u00a0of an upcoming new version of the editor.</p> <p>It keeps all the advantages of the current editor plus:</p> <ul> <li>AsyncAPI 2.x support: a big deal in the Event-Driven world</li> <li>dark/light theme: must-have in the modern times</li> <li>autocomplete support</li> <li>built-in documentation</li> </ul> <p>The significant thing here is not autocompleting; it is the built-in OpenAPI documentation. It is available in the code editor. When something goes wrong, there is no need to look up anything in the\u00a0documentation\u00a0portal.</p> <p></p> <p>The only bad thing that happened to me in the beta was that my API definition, valid in the current Swagger Editor, needed to be corrected for no reason.</p> <p>So if you are a novice in the API world, start with Swagger Editor (beta).</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#postman","title":"Postman","text":"<p>Postman is primarily known\u00a0as a REST API client for testing. However, it is far more than that. It is a complete API Platform, not only for designing and testing APIs.</p> <p>Postman supports many API formats, not limited to OpenAPI. Its editor supports JSON and YAML, along with auto-completion and error validation. Even though there is no immediate side-by-side preview, like Swagger Editor does, it generates fancy-looking API documentation.</p> <p></p> <p>The only disadvantage is that you must log in to your workspace in Postman. That is not a big deal, but running API requests without login is possible.</p> <p>Beyond that, Postman provides a lot more: create a mock server, test your API endpoints, automate your test, sync with a remote Git repository, deploy your API, etc. It even can generate server-side code. But the number of supported programming languages is less than in Swagger Editor.</p> <p>If you are already familiar with Postman, I recommend using it for API design.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#insomnia","title":"Insomnia","text":"<p>Insomnia is a Postman's counterpart, also developing from an API client to an API Platform. I used it a few years ago to build and validate end-to-end API scenarios. And for me, Insomnia was more friendly for beginners and seemed more straightforward than Postman.</p> <p>Now Insomnia also provides the possibility to design an OpeAPI definition, debug, and test it. From the design perspective, there is a code editor part on the left and a Swagger UI preview part on the right. API is defined with YAML, and the preview displays every change. The tool has good error validation but lacks autocomplete.</p> <p></p> <p>I recommend using something other than Insomnia when following the API design-first approach. And only then come back to debug and test. Insomnia's rich test and debug functionality becomes less relevant in this case as you need to generate the API layer and run a web server elsewhere.</p> <p>I am talking about a free version of the product. The paid enterprise might have that functionality, but that is beyond my current experience.</p> <p>An ideal use case for Insomnia: you already have a REST API service with OAS definition, which you can import, debug, and run tests. Meanwhile, you can adjust some documentation attributes in OAS.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#no-code-tools","title":"No-code tools","text":"<p>No-code means you can design API with the help of UI components rather than writing some code in the code editor.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#stoplight","title":"Stoplight","text":"<p>Stoplight\u00a0is an enterprise-level API Platform with impressive functionality. It also allows designing API with a free plan. Even though that free plan has some limitations, it is enough to develop a RESTful API.</p> <p></p> <p>You can edit your API definition as JSON or YAML in the code editor or configure it via the UI form. And then see the result with the preview. Altogether it may seem too complex, but Stoplight has the best user experience (UX) I have seen in the API-design tools.</p> <p>You can only build API with a technical background. Even with no-code configuration, you'd better know OpenAPI spec anyway. API design with fancy UI is more fun, for sure. But not so productive compared to an advanced code editor in the right hands.</p> <p>There is a bunch of details that largely contribute to what is called \"developer experience.\" In error validation, there is a \"done-it-right\" example. You can change the order of your API paths in the navigation pane. You can create a Model by generating a JSON file into a JSON schema. And these are only a few.</p> <p>When your API is ready, you can publish it in a developer portal. You can configure mock API requests, so other users will see your API documentation and try to use it. You can publish different versions of APIs and search across multiple portals. Overall, developer portals are another big topic I might cover someday. Stoplight handles that greatly, but this does not benefit you with the free plan.</p> <p>So if you want to engage in API design without studying OpenAPI the hard way by making your hands dirty in the code editor, then Stoplight is the right choice.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#apicurio-studio","title":"Apicurio Studio","text":"<p>Apicurio\u00a0is a bunch of open-source products for API design and management. My focus is on\u00a0Apicurio Studio, which deals with designing API with no code.\u00a0</p> <p>The \"open source\" label defines both strengths and weaknesses of this product. It neither does have a fancy UI nor multiple features to simplify the life of an API designer. But it is free to use: you can either use it on the Apicurio website or run it on your server with no charges.</p> <p></p> <p>Apicurio supports two configuration modes: Design for no-code users and Source ones who prefer code editors. Compared with Stoplight, Apicurio supports the same RESTful API configuration process. As they both follow the OpenAPI specification, it is challenging to build something extraordinary there. Apicurio looks less user-friendly and only provides a few additional services (remember, it is free).</p> <p>It also does not have a built-in preview. Instead, it uses\u00a0Redoc, another great open-source tool, to generate API documentation.</p> <p>If you need to scale the API design approach in your organization but are not willing to pay money, then it is the right choice for you. Just consider the possible risks that come with open source. Remember, the good thing is that OpenAPI is the industry standard nowadays, so you can take your API schemas and migrate them to other tools.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#apibldr","title":"Apibldr","text":"<p>Apibldr\u00a0is a free online tool (free does not mean open source) to design OpenAPI and AsyncAPI definitions. The latter is a big deal that is not very common. Of six tools, only the beta of Swagger Editor and Apibldr work with AsyncAPI.</p> <p></p> <p>From a UX perspective, it is something between Stoplight and Apicurio. You only have to define your Models in a JSON schema format; there are no other options, so that does not entirely stick with the no-code concept.</p> <p>Apibldr also allows code generation for the client and server sides. Again, I am not an expert, but it seems that it uses the\u00a0swagger-codegen\u00a0library for that purpose. So it is up to you whether to use it or not.</p> <p>My main concern is that Apibldr's\u00a0GitHub\u00a0looks abandoned. I realized that the developers focus on RestCase, a more enhanced API tool that uses Apibldr's UI. Not sure about its future, but for now, it is a good tool to open and start designing API in your web browser.</p>","tags":["API Design"]},{"location":"posts/api-design-tooling/#what-tool-do-i-choose","title":"What tool do I choose?","text":"<p>I choose\u00a0Postman\u00a0to design API for my current side project. I am excited to learn more about that tool and its outstanding infrastructure. I am advanced enough to use just a code editor, so I don't need a no-code solution here.</p> <p>But I will keep my eye on another API tooling as one I may come up with in the next part of the API design tools overview.</p> <p>Take care</p> <p>Ilya</p> <p>Image by Merlin Lightpainting from Pixabay</p>","tags":["API Design"]},{"location":"posts/backward-compatibility/","title":"Breaking changes &amp; Backward compatibility","text":"<p>I learned what backward compatibility means regarding software engineering when I started working on microservices. When you are responsible for services widely used by other teams inside and partners outside, you most likely become paranoid about maintaining backward compatibility of your API as much as possible. Especially when it is a  highly volatile environment with rapidly growing functionality and direction changes on the fly.</p> <p>At some point, I invented the term \"backward awkwardability\" - an awkward feeling while telling consumers that there are breaking changes in a new release, so they have to migrate. If your team does it frequently, they will say something like, \"C'mon guys, you introduced breaking changes just a few iterations before! What's going on?\"</p> <p>Let's talk about backward compatibility and how to deal with the breaking changes in terms of API.</p>","tags":["API Design","BA & PO"]},{"location":"posts/backward-compatibility/#breaking-the-broken","title":"Breaking the broken","text":"<p>Maintaining backward compatibility means newer versions will keep the application's existing functionality intact. A recent version can contain bug fixes, improvements, or new features. But all previous components are working as expected, and no efforts are required to bring them back to work after the update.</p> <p>Breaking backward compatibility means you obligate your consumers to make efforts so they can retain the functionality they are already using. It is not the same as regression. The latter implies degrading the current customer experience due to newer changes. But that usually happens unintentionally because of a lack of quality assurance and fixed from the developer side.</p> <p>Breaking changes are intentional, and it requires some work to adapt the changes from the consumer side. They already did some job to start using your service. And now, they need to do this exercise again to keep going, and no guarantee that it will not happen again unless there is a written agreement to prevent such cases.</p> <p>Migration is often a non-planned job in the short or mid-term. Consumers are paying a double price: for new and current functionality. We assume that the value should compensate for the efforts.</p> <p>Regarding software development, the efforts are additional work hours to change the source code in compliance with the breaking changes. The cost of such changes may be high: a Business Analyst should assess the impact of changes, a Developer to investigate required changes and implement them, and a Quality assurance engineer to verify them.</p> <p>Let's review a more general example related to User experience. Any drastic changes in how users interact with the system require additional efforts to learn and adapt to how to use the functionality again. It is not critical when it is about moving a button in a direct-2-consumer app (I wanted to use Instagram as an example, but moving a button there might also be impactful). But considering professional and semi-professional software products, such changes will impact productivity resulting in money loss.</p> <p>A frustrated end-user can stop using an app and switch to a competitor. It is more complicated for professional service: you can switch from Figma if they decide to revolutionize the design process in an expected way. For enterprise-level vendors, such a switch might be a costly endeavor. A concerned service can be a vital part of business processes, and it is impossible to drop it immediately and jump to a competitor. Anyway, the cost of switching to another service is always higher than the cost of implementing the breaking changes.</p>","tags":["API Design","BA & PO"]},{"location":"posts/backward-compatibility/#expect-the-unexpected","title":"Expect the unexpected","text":"<p>Is it possible to avoid breaking changes? Yes, technically. Keeping compatibility at any cost leads to an increase in technical debt. Your team will have to implement sometimes non-trivial and not the best solutions to honor their commitments. They also will be very limited in using new frameworks and libraries and major updates of the ones in current use. So you pay the price for maintaining backward compatibility instead of your customers.</p> <p>That strategy may work for conservative industries. The alternative is to regulate the introduction of breaking changes. The regulations depend on the organization's policies and services specifics. In general, it results in API contract terms aligned with consumers.</p> <p>The following questions are considered when \"signing\" the contract:</p> <p>1) Frequency and schedule</p> <p>The organization defines how frequently you are willing to release incompatible versions: per several releases or some calendar period. You aggregate the breaking changes in your product backlog and fire them in a particular release. So consumers can plan their migration activities accordingly.</p> <p>The main issue is to follow that schedule, as there might be business reasons to introduce breaking changes earlier than initially expected.</p> <p>2) Communication</p> <p>It matters how you notify customers about it. The worst option is to send them a link to a Jira ticket with a poor description and a mess in the comments. The best option is to write a comprehensive migration guide. Developers might consider writing such a guide a waste of time, but it is an investment to reduce future support activities.</p> <p>3) Migration support</p> <p>A comprehensive guide will not save you from additional communications: answering questions, helping with the update, and fixing bugs. So be prepared to have a support buffer in your team's capacity. Or even better, super-obvious advice: always have a support buffer.</p> <p>4) Support timeline for previous releases</p> <p>Customers may postpone the update to an unknown time due to various reasons. And they may keep requesting improvements and bug fixes for an older version they currently use. That ends up supporting several releases: moving forward with new releases and producing backports to the previous ones.</p> <p>The backports continuously require more efforts from the team, shifting focus from the future to the past. The more gap you have, the more challenging it is to improve an older version. It is not a trivial task from both a development and testing perspective that can trigger unexpected problems.</p> <p>To fight this, you must include another point in the contract: how long you commit to supporting previous versions. In my practice, there was a case when we supported five previous major releases. That was a solid argument to speed up the update. As we had a 2-week release cycle, the customers had about two months to plan and conduct the update.</p> <p>Frequent updates may not be typical for your industry. That period may vary due to different business contexts. Or you have a good old customer with a fat bank account unwilling to migrate soon. And the senior management will eat you alive if you try to push the unwanted update. That is mainly the organization or program-wide question. You can only support previous releases for a while but can't drop too frequently.</p>","tags":["API Design","BA & PO"]},{"location":"posts/backward-compatibility/#when-the-link-becomes-missing","title":"When the link becomes missing","text":"<p>Maintaining backward compatibility for existing functionality and managing breaking changes is a challenge. And who is responsible for managing that? The answer is rather disappointing -  the entire team in various aspects:</p> <ul> <li>Business Analyst to conduct impact analysis when considering design options. </li> <li>Product owner to communicate with stakeholders. </li> <li>Tech Lead to manage tech debt and overall delivery. </li> <li>Developers follow the agreements and make all that happen. </li> <li>QAs to ensure we don't break something unintentionally.</li> </ul> <p>To finalize that topic, I would like to emphasize the following statements:</p> <ul> <li>When discussing a feature design or a bug fix for such a critical service, always ask yourself and the team if that can potentially introduce breaking changes. Become paranoid, just like me.</li> <li>Ensure all stakeholders, including the team, know the breaking change policy. If you don't have it already, you don't need it. If you need it, start the discussion in your organization.</li> <li>Test Automation is the key to preventing unexpected breaking changes with regression testing.</li> <li>When designing a data structure in general and API request/response format, remember that there will be no chance to change those when your service goes live. It is not possible to elaborate on all questions in advance. But that approach leaves no room for \"will do it later.\" Try to consider all possible options, even if they might be unrealistic. The price for reckless design is the highest price we pay in the industry.</li> <li>Make sure breaking changes are appropriately communicated to your customers.</li> <li>And follow your Contract commitments.</li> </ul> <p>Take care,</p> <p>Ilya</p>","tags":["API Design","BA & PO"]},{"location":"posts/backward-compatibility/#change-history","title":"Change history","text":"<ul> <li>2021-04-26: Initial version published</li> <li>2023-04-04: Second revision published</li> </ul>","tags":["API Design","BA & PO"]},{"location":"posts/definition-of-api-requirements-v2/","title":"Definition of API Requirements","text":"<p>Requirements definition for APIs is not a standard part of the Business Analysis activities in software development. Usually, API design was a single responsibility of a system architect or a developer, considering implementation subject matter experts.</p> <p>During my BA career, I had to deal with API-specific requirements. I realized that the API layer has stakeholders (aka consumers) who have their needs related to APIs provided by a system-of-interest. And those needs should be analyzed and translated into requirements.</p> <p>The goal of this essay is to give an introduction to the definition of API requirements for my fellow Business Analysts, Product Owner, and Product Managers. I will not discuss technical details and cover API types (REST, RPC, GraphQL, etc.). There are a lot of experts who have done that and did a great job.</p> <p>I will focus on general things, looking at API from the requirements perspective in general. Also, I have mostly worked with RESTful API, which impacts my view on some things.</p> <p>I will not cover a case when you need to integrate with someone's API. That is part of another topic.</p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#when-you-need-requirements-for-api","title":"When you need requirements for API","text":"<p>You don't need to provide any API-specific requirements when there is only one API consumer of your service, and this consumer is a front-end or another service developed within one team.</p> <p>In this case, an API reflects a feature available in the system. And there is only one way how a consumer can use it. You can define a user story describing acceptance criteria with functional, quality (non-functional) requirements and attach UI wireframes. That will be enough for a developer to design and produce an API covering a particular feature.</p> <p>But when more parties consume your APIs, you should consider their needs. We can split those parties into two big categories:</p> <ul> <li>Different teams within your organization.</li> <li>Consumers outside your organization.</li> </ul> <p>They need your API to reach their business goals despite their apparent differences. Each party has its context of usage and a particular integration approach. Thus you need to consider them as stakeholders and address their concerns to provide a great customer experience.</p> <p>You need to draw a clear line: API requirements are not about introducing new or improving current functionality. API is a door to access the functionality, which can be opened in different ways.</p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#terms-definitions","title":"Terms &amp; Definitions","text":"<p>Let us clarify some concepts and align on the terms used in the text.</p> <p>API: translates as \"Application Programmable Interface,\" but that does not give you a key without a Computer Science degree. The main word for my Bachelor of Arts fellows is \"Interface.\" For an analogy, your mouth, tongue, and lungs are verbal communication interfaces.</p> <p>API itself is an extensive term. For now, we need to understand that we are talking about a gateway through which your service communicates with the outside world.</p> <p>API endpoint: a single instance of API with a unique address (URL). Sending a required input to that URL triggers some command within your system and returns an output about a successful result or failure.</p> <p>Example: <code>POST https://ecomplatform/api/v1/purchases/{purchaseId}/cancel</code></p> <p>API call: sending a request to an API endpoint and getting a response.</p> <p>Client: a general term to identify someone or something calling your API.</p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#api-definition","title":"API Definition","text":"","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#why-what","title":"Why &amp; What","text":"<p>As usual, we need to understand the following things to succeed with the requirements:</p> <ul> <li>Why do we need this?</li> <li>What will it do?</li> </ul> <p>The second question looks like an easy one. API is about passing commands to manipulate data objects of some Entities. The primary activities are Create, Read, Update, and Delete (CRUD) operations, but the devil is in the details.</p> <p>For example, in our e-commerce system, there is the \"Purchase\" Entity and a command \"Cancel\" available for an Entity object. Our API endpoint should cancel a previously made purchase. In a simple view, we need the following:</p> <ul> <li>make sure how we identify a right Purchase to cancel;</li> <li>how we proceed with the cancellation.</li> </ul> <p>Cancellation can mean an actual deletion of that Purchase (bad idea) or an update of a Purchase status with relevant details (good idea). You should be aware of the business logic. Changing a state of an object might trigger a chain of information updates elsewhere in the system, introducing the request logic.</p> <p>The \"Why\" question is more complex. A particular API call can participate in several use cases, each having its context. You might cover every context with one API endpoint or craft the one to rule them all. That is a question of implementation (and risks). But you would better know those use cases.</p> <p>Handling multiple contexts of API usage, even without one organization, is difficult. But when API reaches the outside world, it is almost impossible to consider every use case in which it might be included. You can define the rules, provide some documentation, and hope that will work. Just be prepared for problems where no one expects them to occur.</p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#prerequisites","title":"Prerequisites","text":"<p>The next step is to define what prerequisite of an API call - authentication and authorization:</p> <ul> <li>Authentication is about verifying clients and allowing them to communicate with your service.</li> <li>Authorization is about permission to enable specific clients to make particular API requests.</li> </ul> <p>Usually, an Authentication approach applies to all API endpoints in an instance rather than a specific one. I omit to describe all existing approaches as it is a topic for another essay. For now, let's consider that some API consumers may require a particular method of authentication based on their security restrictions.</p> <p>Permissions can be managed on the system and the API layer. You can define API endpoints doing the same thing but with different business logic or maintain one which considers different roles. Let's return to our e-com example.</p> <p>Canceling a Purchase by a Customer and canceling a Purchase by an Admin are different scenarios. Here we have the same action but with two different contexts. Admin may skip some validation steps required for a Customer in that business logic so that they can cancel a Customer's Purchase in a simplified way. When designing an API endpoint, you need to make sure that dangerous power will be used only by Admins.</p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#api-call","title":"API Call","text":"<p>Now we are ready to define our API endpoint considering the following:</p> <ul> <li>API Contract</li> <li>Request logic</li> </ul> <p></p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#api-contract","title":"API Contract","text":"<p>API contract is an agreement about expected input and outcome between you and the Clients. The Contract is strictly formalized, and clients agree to follow it when they start using your API. The API owner takes responsibility for maintaining the consistency of the Contract.</p> <p>For input, a Client provides a set of required and optional parameters. The Required parameters usually identify an object or a group of homogeneous objects to access or modify them. The optional alters an expected response by reducing the amount of returned data, for example.</p> <p>The Request is also context-bound whether you expect your API to be part of the API request chain or standalone. For example, you need to retrieve a single Purchase. So you need to define an ID to load a Purchase object. Usually, the system provides several identifiers for the same things in different contexts. Let us assume a Purchase entity has a human-readable Business ID and a System ID as a hashcode.</p> <p>Before making a decision, we need to understand how a Client will obtain that ID to make a call. If any other API endpoint does not return the System ID, why would we expect our clients to provide it?</p> <p>Or does the system identify a Purchase directly by the Business ID? We can quickly consider a workaround by making a Purchase search request with a Business ID, extracting a System ID from a found Purchase, and making a call for Purchase details. But now we have a request logic instead of a simple call.</p> <p>For a Response, an API endpoint returns some data. That can be all information about a data object or just a message with a status. There are successful and failed responses. The latter usually returns an error as a code and some message about what has gone wrong.</p> <p>A Response deals with an API model. Understanding that a data model operated by API is not equal to the data model stored in your database is essential. Your API may return a reduced amount of information, skipping purely technical attributes and some sensitive data.</p> <p>Providing expected outcomes is also a part of the Contract. The information should correspond to the client's goals and desired format, even if it differs from the data in the system. That can be localization to a different language, another date format, currency conversion, combining data objects of various entities, adapting data from third-party providers, etc. In this case, a BA needs to deliver a data mapping deliverable.</p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#request-logic","title":"Request Logic","text":"<p>The API request logic may be:</p> <ul> <li>Simple: one call to the Back-end with CRUD operation to a data object of a single Entity.</li> <li>Composite: a chain of calls to one or several Back-end services with several Entities involved.</li> </ul> <p>In the latter case, you should \"orchestrate\" a consecutive or parallel set of API calls. As an alternative, you can expose those calls separately and provide the guideline of how a Client needs to call them.</p> <p>For orchestration, maintaining overall performance and sustainability becomes extremely important. The more steps we have in a sequence, the probability of failure is higher, considering different \"bad\" scenarios such as prolonged response time, messy data, downtime, etc.</p> <p>It is OK when such composite requests consist of 2-3 data retrieval calls. The \"heavy\" requests are too risky and non-maintainable in the mid and long term. When you have more calls with updating data in different parts of the system, you need to revisit the scenario and find another way. It is, without doubt, a technical debt in its essence.</p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements-v2/#outro","title":"Outro","text":"<p>It is an introduction to such a vast topic as API, so many details have remained overboard. I hope we will cover them in the following materials. Stay tuned!</p> <p>P.S. This a 2nd revision of my first published post. Please read this version, not the original. I will keep it more for nostalgic reasons</p> <p>Take care,</p> <p>Ilya</p> <p>Image by Gerd Altmann from Pixabay</p>","tags":["API Design"]},{"location":"posts/definition-of-api-requirements/","title":"Definition of API requirements","text":"<p>There is a 2nd revision of this article, so please read it instead. This, as my first published post in this blog, will stay here as a reminder of my bad writing.</p> <p>At some point in my career, I faced a need to specify requirements for API. Those were not typical solution requirements I worked on before. I learned about the API layer which is very common among the enterprise systems. It can hide a set of microservices or a legacy system from the outer world. Like any other system, it is also impacted by stakeholders' needs. And those needs have to be translated into requirements.</p> <p>We are going to decompose the definition of API requirements and see what lies within. I will pay your attention to what should be taken into consideration for the API layer. It is an introduction to this topic as there are other sides of it to explore further.</p> <p>We are not going to talk about implementation types of API such as REST, RPC, GraphQL, etc. Ideally, requirements should not be tied to the technical implementation and that rule works here as well.</p> <p>I have been working more with REST and REST-like APIs. Like most of you, I believe. However, I think my experience can be applied to other types as well. Considering some specifics, of course. But those are not covered here.</p>"},{"location":"posts/definition-of-api-requirements/#why-you-dont-need-api-requirements","title":"Why You Don't Need API Requirements","text":"<p>Before we start you need to ask yourself:</p> <p>Do I need to write and maintain requirements for API?</p> <p>As a System or Business analyst, you don't need to proceed with them if the API is used only within your service. In that case, it is a part of the provided functionality.</p> <p>You can define a user story describing acceptance criteria with a bunch of functional, quality (non-functional) requirements, and attach UI wireframes. That is all about expected outcomes to be reflected on a UI and/or in data. API is something in-between that you don't need to care about. It is a part of technical design managed by the engineering team with the main purpose to address the requirements.</p> <p>But if your API is publicly exposed you need to consider interests of other parties. Those parties can be split into two big categories:</p> <ul> <li>Other teams within your organization.</li> <li>Customers and partners outside your organization.</li> </ul> <p>Despite obvious differences between them, they both need your service to reach their own business goals. Each party has its context under which your service is used and a particular integration approach. Thus you need to consider them as stakeholders and address their concerns to provide great customer experience.</p> <p>It is important to separate the functional requirements from API ones. API requirements are not about introducing new or improving current functionality. That is about providing the right way to use that functionality. So we identify the back-end as a functional piece and API as a gateway to access that functionality provided by the aforesaid.</p>"},{"location":"posts/definition-of-api-requirements/#terms-definitions","title":"Terms &amp; Definitions","text":"<p>One more step before we go forward. Let us clarify some concepts and align on the terms used below.</p> <p>API is translated as \"Application Programmable Interface\" but that does not give you a key without a Computer Science degree. For my \"Bachelor of Arts\" fellows, the main word here is an \"Interface\". Generally, your mouth and tongue are an interface for speech communication. Your fingers are an interface to type text on your keyboard for written communication. The same is applied to the software in which classes and instances communicate with each other in some strictly formalized way.</p> <p>API is a very broad term. Here we talk about the gateway through which your service communicates with the outside world.</p> <p>API endpoint is a single instance of API with a unique address (URL). Sending a required input to that URL triggers some command within your system and returns an output about a successful result or failure.</p> <p>Example: <code>POST https://ecomplatform/api/v1/purchases/{purchaseId}/cancel</code></p> <p>API call is a process of sending a request to an API endpoint and getting a response.</p> <p>Client is a general term to identify someone or something that is using your API.</p>"},{"location":"posts/definition-of-api-requirements/#api-definition","title":"API Definition","text":""},{"location":"posts/definition-of-api-requirements/#what-why","title":"What &amp; Why","text":"<p>To provide the right API endpoint your need to understand:</p> <ul> <li>What is that API doing?</li> <li>Why is it required?</li> </ul> <p>The first question seems to be an easy one. Usually, there are data objects of some Entity that we can access and conduct some action with them. The basic actions are Create, Read, Update, Delete (CRUD) operations. Even some specific actions are just about changing some information in a data object.</p> <p>For example, our API endpoint should cancel a purchase in a store. A \"Purchase\" is an object and \"cancel\" is a required action. It is a single purchase so we need: a) make sure how we identify a right Purchase to cancel; b) how we proceed with the cancellation.</p> <p>Cancellation can mean an actual deletion (bad idea) or an update (good idea) of a Purchase data object. Changing a state of an object might trigger a chain of information updates elsewhere in the system. You should be aware about the business logic. Either it is triggered automatically or you need to make additional API calls to complete that action.</p> <p>The second question is more complex. An API call is a non-visible participant of the interaction between a user and the system (i.e. Use Case). One call can participate in several use cases with each having its context. You might cover each context with a separate API endpoint or craft the one to rule them all. That is a question of implementation. The main thing here is that you need to understand those contexts.</p> <p>Again, it is easier to own the context when it is all about systems within your organization. But when API goes outside and customer success is relying on that, it is difficult to consider all possible contexts which may appear.</p> <p>You lack control over how APIs are used. You can define the rules, provide some documentation, and hope that will work. Just be prepared that problems occur where no one expects them to be.</p>"},{"location":"posts/definition-of-api-requirements/#prerequisites","title":"Prerequisites","text":"<p>Now we know why we build our API endpoint and what it does. Next step to define what conditions need to be satisfied to make that call. In most cases we talk here about authentication and authorization:</p> <ul> <li>Authentication is about verifying a client and giving them the possibility to communicate with your service.</li> <li>Authorization is about permission to allow certain clients to make particular API requests.</li> </ul> <p>Authentication is usually managed on a higher level considering an API layer itself. The specific API endpoint is likely to follow that approach. But if there is an exception from that rule, such requirements need to be considered.</p> <p>Permissions are usually managed on the back-end side. But some constraints may be imposed on the API layer as well. You can proceed with different API endpoints which are doing the same thing but for different roles, considering business restrictions.</p> <p>For example: canceling a Purchase by a Customer and canceling a Purchase by an Admin. Same action but with two different contexts. Let us assume that an Admin can skip some validation steps in business logic to cancel a Customer's Purchase in a simplified way. When designing an API endpoint you need to make sure that dangerous power will be used only by Admins. There are a dozen ways of handling this but that requirement should not be missed.</p>"},{"location":"posts/definition-of-api-requirements/#api-call","title":"API Call","text":"<p>Now we are ready to design our API endpoint. Its definition consists of two things:</p> <ul> <li>API Contract for Request and Response</li> <li>Request logic</li> </ul>"},{"location":"posts/definition-of-api-requirements/#api-request-contract","title":"API Request Contract","text":"<p>API contract is an agreement about expected input and outcome between you and your clients. Communication via API is strictly formalized and clients accept to follow the provided format. They accept it by default when starting using your API. The API owner takes responsibility to follow the contract obligations by maintaining the operability of the service and consistency of the contract itself.</p> <p>For input, you expect clients to provide required and optional parameters. Required parameters usually identify objects or a set of homogeneous objects to access or modify them. The optional is used to modify expected responses and provide additional information.</p> <p>Generally, input parameters can be provided in a few ways:</p> <ul> <li>Manual user input When a User submits manually-typed information on the client-side passing directly to API.</li> <li>Context-provided input When the request is taken or combined from responses of preceding API calls made in that particular Use Case.</li> </ul> <p>From a technical perspective, there is no difference in how request parameters are provided. But that should be considered during the analysis.</p> <p>For example, you need to request a single Purchase. First, you find out what ID should be used to load a Purchase object. In \u201cbloody\u201d enterprise systems, there are always several identifiers for the same objects in different contexts. Let us assume a Purchase entity has Business ID as something human-readable and System ID as a hashcode.</p> <p>Our API endpoint asks for System ID to get Purchase details. That is OK, but what if clients expect their customers to manually enter a Purchase ID for some verification on that step of a Use Case?</p> <p>I would expect you to ask a question \"How did a Customer get that ID before?\" Let it be available on a bill and now a Customer wants to see Purchase details without being authenticated in the app. And providing System ID on that is not an option. Only if the customer suffering is a part of UX design.</p> <p>We can quickly consider a workaround by making a Purchase search request with Business ID, then extract a System ID from a found Purchase and make a call for Purchase details. Fine if you can use search for that purpose. But your clients need to make two API calls instead of one.</p> <p>Again, there are dozens of ways to handle such cases. This is just an illustration of how simple things might become surprisingly complex.</p>"},{"location":"posts/definition-of-api-requirements/#request-logic","title":"Request Logic","text":"<p>When clients send a request to API then something should happen. Either we get a successful response or an error, some work is done beneath. We can consider:</p> <ul> <li>\"Simple\" request Making one call to the back-end with basic CRUD operation to a data object of a single Entity.</li> <li>\"Composite\" request Making a chain of calls to one or several back-end services with a few Entities involved. That means you are hiding that complexity from the clients. Otherwise, they would be forced to do all those operations and transformations by themselves with a high risk of doing something wrong.</li> </ul> <p>You need to define a sequence of steps on how that chain will work. It is important to consider accessibility, especially if third-parties services are involved. And what kind of request is passed for each call and how each response should be processed.</p> <p>Don't forget about non-functional stuff: maintaining overall performance and sustainability. More steps we have in a sequence - the higher probability of a failure. You need to consider different \"bad\" scenarios: long response time, bad data, downtime, etc. Even if such \"edge\" cases seem to be unreal you should consider them. Even you can't cover them all due to time and financial restrictions.</p> <p>Whether you call other services within your organization or a third-party, now you are in the client\u2019s shoes. You agree with the contract hoping both parties are going to follow their commitment. If you can somehow impact other services inside your organization by forcing them to follow or change the contract, for third-parties and vendors that can be problematic. Only if you have the leverage to make them but that is not always the case in real life. Anyway, all that should be considered when you are defining a composite API call.</p>"},{"location":"posts/definition-of-api-requirements/#api-response-contract","title":"API Response Contract","text":"<p>For a successful call, an API endpoint returns a response with some amount of information. That can be all information about a data object or just a message that information about that object has been updated. It is a matter of request type and endpoint design.</p> <p>You need to consider that the data model stored in your database is not the same as the data model provided to the clients via API. B First, there can be some differences in data types used. Secondly, there is no need to expose all attributes you have in the data model via API. There is always some information you don't want to share with some types of users.</p> <p>Providing expected outcomes is a part of the Contract. So the information should correspond to clients' goals and expected format. Sometimes you need to transform the data originally provided by the back-end. That can be localization to a different language, another date format, currency conversion, combining data objects of different entities, adapting data from third-party providers, etc. Data mapping is the right requirement artifact to keep that important information.</p>"},{"location":"posts/definition-of-api-requirements/#epilogue","title":"Epilogue","text":"<p>That is just a basic overview of what is beneath the API layer. We are not touching specific implementation and possible format of API specification and documentation. Hopefully, we will investigate those topics in the future.</p>"},{"location":"posts/non-functional-requirements-and-api/","title":"Non-functional Requirements and API","text":"<p>Previously we discussed the notion of requirements for APIs. Now let's talk specifically about their quality attributes. Or how we can refer to them: non-functional requirements.</p> <p>When we use the term \"non-functional requirements,\" we imply that there should be \"functional requirements\" as well. What is a functional requirement for an API endpoint? Return a response based on the provided input data. It sounds oversimplified, but this is how it is.</p> <p>In detaching API from the functionality, meaning we have a variety of APIs for different consumers, I like an association with a \"door.\" Despite any context, the primary function of a door is to change its state from closed to open and vice versa. The door can be built from different materials, and it can be opened by various means. The opened door can lead to different locations. But its primary function remains the same. We are not considering it as a weapon, even if you hit someone by a door (accidentally, I believe).</p> <p>However, the quality of that door matters, and the same we apply to API. There are dozens of non-functional characteristics, so we only look at major ones.</p>","tags":["API Design"]},{"location":"posts/non-functional-requirements-and-api/#security","title":"Security","text":"<p>A banking term KYC (Know Your Customer) also works for APIs. Whether it is an internal, partner, or public API, we need to do the following:</p> <ul> <li>Onboarding - provide means for a consumer to start.</li> <li>Authentication - identify your consumer.</li> <li>Authorization - manage the access level.</li> <li>Offboarding - terminate consumer access.</li> </ul> <p>We must prevent unauthorized access to our system with API and avoid leaking sensitive information that can damage business and infrastructure. The latter is also relevant for authorized users: we don't want to expose some technical details of how the system works or any data not related to a particular consumer.</p> <p>API is a vulnerable place, so there are dozens, if not hundreds, of books and other materials related to security measures and approaches. Using JWT (JSON Web Tokens) tokens is the most common approach nowadays. I don't cover this extensive topic in this article, so I just suggest some reading:</p> <ul> <li>About a token itself</li> <li>About token types</li> </ul> <p>Security must be an essential part of the Architecture design from the beginning. It should cover everything exposed in the API layer, not just a single endpoint.  </p>","tags":["API Design"]},{"location":"posts/non-functional-requirements-and-api/#reliability","title":"Reliability","text":"<p>What happens if something goes wrong? Getting a successful response is not always the case, so we must consider every possible issue.</p> <p>The first is what we return to consumers: error codes and their messages. API should return a meaningful error message so a consumer can understand what happened and what they should do to get a successful result with the next call. </p> <p>There are 4xx and 5xx HTTP status codes, so you don't need to reinvent the wheel. The best practice is to have an Errors template with common cases such as 401, 404, and 500, with the possibility of extending them with custom errors. The custom errors should still be based on the HTTP status codes, so pick the code wisely.</p> <p>There is a classic case with the codes: if a Search API does not find any result, it should return 404 (Not found) or 200 (OK).</p> <p>One more area is error resilience: what happens if something goes wrong in the request logic? For example, your API call is trying to reach a currently unavailable service. There are several scenarios for the so-called Circuit Breaker:</p> <ul> <li>Throw an error immediately.</li> <li>Try several times.</li> <li>Use a plan B to reach a duplicate of that service after trying several times.</li> </ul> <p>Another issue is with composite API: you should make two requests to aggregate data across different services. One responded, another didn't. Your composite API can return an error. Or it can return partial or even mock data. But remember to notify a consumer that data needs to be completed.</p> <p>A weak point of composite API requests is transaction consistency. When an API endpoint triggers an update operation in several services, an issue may occur if some service does not proceed. Ideally, we have to cancel an entire transaction and re-write the already updated data. But in practice, it may be tricky as those changes appear in the history of system changes, or you simply don't know how to revert it.</p>","tags":["API Design"]},{"location":"posts/non-functional-requirements-and-api/#performance","title":"Performance","text":"<p>Sometimes it isn't easy to separate system performance from API performance. But it becomes a crucial element if we are talking about a separate layer as API Gateway. Acting as a proxy or orchestrator, it must process requests and respond quickly.</p> <p>Performance is another weak point for composite APIs. More internal calls we make than more performance may suffer. We can't control how quickly other services will respond (or will they respond at all).</p> <p>But first of all, we need to understand the criteria to measure API performance: request payload, testing environment, available resources for services similar to production, what we consider as low performance, etc. Performance testing should become a routine, not something done during a release.</p>","tags":["API Design"]},{"location":"posts/non-functional-requirements-and-api/#usability","title":"Usability","text":"<p>Developers who will integrate with your API are your direct users. So you need to care about Developer Experience (DX). For API, it matters to follow the best industry practices, not to confuse the developers, and provide meaningful documentation.</p> <p>API documentation is essential to onboard developers and help them use your API effectively. If they ask you questions, you need to consider further improvements.</p> <p>API docs (API references) can be autogenerated, produced manually, or combined with these two approaches. The key point is to define the required components and the formatting. For example, an API must have a summary with 2-3 words using a verb (\"Make Americano\") and a description with more information (\"To trigger making of a small cup of Americano without milk\"). Every request/response attribute must also have a description and example (\"machineId\" - unique identifier of a remote coffee machine, \"edtu-1234-as34-1234\").</p>","tags":["API Design"]},{"location":"posts/non-functional-requirements-and-api/#maintainability","title":"Maintainability","text":"<p>I would instead call it API contract persistence. Both sides must respect the contract, but only the owner can change it. As soon as your API is published, making changes can be problematic.</p> <p>Deploying an API endpoint and never changing it is not possible. An imperative \"Don't break API contract\" impacts how you will support it. If the initial design is bad, changes will likely introduce backward incompatibility. So if you release a new incremental version, consumers will have to keep up with the changes on their side.</p> <p>I already wrote an essay on that topic (link), so I will not repeat its points. From the quality perspective, we must consider how we will maintain the API in the future.</p>","tags":["API Design"]},{"location":"posts/non-functional-requirements-and-api/#compliance","title":"Compliance","text":"<p>Don't be surprised that API is a subject of compliance. And it is not limited to organization or industry standards. In some cases, especially for finance and health, regulatory standards need to be addressed depending on the region of operation. Here are two sources to dive into that topic:</p> <ul> <li>API compliance</li> <li>Global Open Banking standards</li> </ul>","tags":["API Design"]},{"location":"posts/non-functional-requirements-and-api/#summary","title":"Summary","text":"<p>When defining requirements and design for API, you need to take into account its quality attributes, also known as non-functional requirements in the Business Analysis world. They are usually in the shadow of exciting system functionality. But if not addressed from the beginning, both parties will suffer, one from using that API and another from maintaining it. So let's agree that quality comes first.</p> <p>Take care,</p> <p>Ilya</p>","tags":["API Design"]},{"location":"posts/performance-metrics-obsession/","title":"How I overcame my obsession with performance metrics","text":"<p>I fell into a common trap of every manager: obsession with performance metrics. Since I have been promoted to the PO role my responsibilities include tracking stats related to the backlog and team performance. That includes the team\u2019s capacity, estimates, velocity, and other specific metrics. In an ideal world, the estimation of planned features matches capacity, the team performs a predicted velocity and (more importantly) delivers features in time. But we all know that doesn\u2019t work this way.</p> <p>This is the story of how I became obsessed with numbers instead of being obsessed with a product. And how I overcame that and shifted my focus to real value.</p>","tags":["BA & PO"]},{"location":"posts/performance-metrics-obsession/#why-did-i-fall-into-the-number-obsession-trap","title":"Why did I fall into the \u201cnumber obsession\u201d trap?","text":"<p>Here are the main reasons, from my perspective:</p> <p>Ambitions</p> <p>As a newbie Product Owner, I wanted to do my job perfectly: produce an ideal roadmap with epics and user stories that contain clear requirements so that the team could provide precise estimations (in story points). Then that would be translated into a plan fitting the team\u2019s capacity. The team would commit to the plan and complete it with flying colors within a predicted timeframe. Customers are happy, stakeholders are happy, my manager is happy, and the team is also happy. I would receive a gold medal for \u201cthe best PO of the year\u201d with a promotion to the Chief Product Officer position. Or Vice President of something, why not?</p> <p>But the reality is harsh. The requirements are not always defined well, technical complexity is underestimated, the team lacks experience in some domains, dependencies on other teams, and urgent customer support requests. I named only a few obstacles - pretty sure you know the others.</p> <p>So the original plan is not valid anymore, epics and features shift to \u201csomewhen when it is ready - maybe this year, maybe not\u201d. You found yourself in the hell of constant re-planning (you can read about it in one of my previos essays). You re-plan, the plan fails to meet reality, you replan again and now it looks good. Oh, f*ck, two developers left the team\u2026 Here we go again.</p> <p>When you spend most of your time on re-planning, you can\u2019t be focused on the product.</p> <p>Pressure</p> <p>Of course, there are reports that track those performance metrics across all the teams. Nothing bad here, this is a must-have if you want to stay on track.</p> <p>\u201cWhy did your team close so few story points in a previous sprint?\u201d I have been asked more and more frequently.</p> <p>I had a default answer. \u201cWe dragged some user stories to the next sprint due to ...(blah-blah).\u201d </p> <p>That follows with something like, \u201cTake a look at this graph. You can see that you are behind the program increment plan. You should have completed this (number) of story points. But you only completed (much less) so please do something. Let me know if you need my help\u201d.</p> <p>That \u201cdo something\u201d implied the re-planning. \u201cSure, I will take a look and handle this\u201d.</p> <p>Now I understand: no one tried to assault me with those questions. Just to highlight an issue and make sure that it is on my radar. But that, multiplied by my ambitions and immaturity as a PO, built up enormous pressure inside me.</p> <p>I fiercely wanted those damn graphs to look good. I tried to use different approaches in feature decomposition and planning, introduced changes to the refinement process, and scheduled additional meetings to discuss any technical issues before the development. But still, non-completed tasks dragged from sprint to sprint and overlapped with new tasks. None of the original plans seemed feasible or even somehow controllable.</p> <p>With all that, my old good friend, the imposter syndrome came into play. \u201cWhat if I am not a real PO? What if they realize that I am not a real PO? I should have better stayed as a Business Analyst and never move to a product organization.\u201d</p>","tags":["BA & PO"]},{"location":"posts/performance-metrics-obsession/#the-overcoming","title":"The Overcoming","text":"<p>Friday, the last day of a Sprint. About 10 PM. I am on the call with a Team Lead (TL) discussing the sprint closure. We really struggled a few previous iterations having a very low team velocity vs our quarter roadmap plans. Several big technical features were continuously dragged from sprint to sprint with multiple issues appearing along the way. </p> <p>But this sprint is different. We have managed to close those big features, handle a few customer requests, and fix a bunch of bugs. I did some calculations and that appeared to be our best sprint for the last 7 (!) months. The team is encouraged as it seems we have overcome that dark period.</p> <p>But this is not what we are talking about with TL. We are discussing 2 medium-sized features that have been developed but not yet tested. They were delivered to a testing environment late today, so our QA already ended her working day. If we could close those features right now, the sprint result will be outstanding. The team really worked hard and deserved that.</p> <p>\u201cWhat will we do with the features?\u201d TL asked. I am a Product Owner and I have the power to decide whether a feature is completed or needs additional work to be done.</p> <p>\u201cListen, those features are quite small improvements of non-critical functionality. They passed dev testing phase and I personally checked them. All works as expected. Right?\u201d I don\u2019t want to lose the outstanding number I already calculated in my mind. And I am determined to make that happen.</p> <p>\u201cWhat do you suggest? Close the tickets without real testing?\u201d</p> <p>\u201cYes, you are right. As I said, that is not a critical functionality. I don\u2019t see any risks there. Let\u2019s set them as non-QA, close, and go rest. We did a really great job so we all deserved that\u201d, I can sound very convincing.</p> <p>\u201cOK, I agree\u201d.</p> <p>After some manipulations, the features were considered as done, the tickets were resolved and the Sprint was closed. Time to enjoy the weekend.</p> <p>Saturday morning I received a message from our QA Lead (QL). \u201cHi, I saw you had closed those 2 tickets as non-QA\u201d.</p> <p>I am ready to defend, \u201cYes. Developers finished them very late so you were already off. They are quite small so I decided to complete them as non-QA\u201d.</p> <p>\u201cOK. I just wondering, do we need to cover them with automated tests?\u201d</p> <p>F*ck. We\u2019d better cover them with autotests. But that means the QA team needs to write testing scenarios, validate them, and then proceed with automation. Basically, to do the work I previously defined as \u201cnot needed\u201d by converting the features to non-QA.</p> <p>I take a pause. There is a growing feeling that I have done something very stupid. I manipulated with features and moved testing activities in \u201ca shadow mode\u201d to the next Sprint and proudly announced that they are completed. But they are not. I start feeling sick.</p> <p>\u201cYes, we need to automate both features\u201d, it took me about 30 minutes to answer her.</p> <p>\u201cOK, no problem. Next week I will pass it to the QA team and we will proceed with the automation. Have a nice weekend!\u201d</p> <p>That weekend was not nice for me at all. I passed through the Five stages \u2013 denial, anger, bargaining, depression, and acceptance. I fought with my ego which was obsessed with the numbers and wanted to achieve high results, even fictional, at any cost.</p> <p>Next Monday we had a team retrospective call. I apologized to the entire team. I confessed that I manipulated tickets for the only reason to satisfy my ego with good stats. I spoiled a really great team achievement and now QAs had to cover my ass with that testing.</p> <p>\u201cWhat I did is stupid. I am really sorry. I will never do that again\u201d.</p> <p>And I am keeping my promise. Now, by the end of each Sprint, I consider only what is really done. I am no longer pushing tickets for good stats. I don\u2019t really know how many story points my team closed last sprint or earlier. I am smiling when some managers report something like \u201cWe completed 1000 story points during a last sprint/quarter/year\u201d. I am no longer playing that game.</p> <p>I am focused on the value we, as the Team, can produce for our customers. We can do a complex functionality during a few iterations and that will not look good on reports. But when we deliver that might have a big positive impact on those who use our services. Value can be transitioned to customer satisfaction and that can be transitioned to profits. Story points do not transition to value.</p> <p>Take care,</p> <p>Ilya</p> <p>Meditation Vectors by Vecteezy</p>","tags":["BA & PO"]},{"location":"posts/product-manager-sophomore-year/","title":"Product Manager: Sophomore Year","text":"Toddler Vectors by Vecteezy <p>Last year I wrote a short essay summarizing my first 365 days as a Product Manager. One more year has passed, and it is time to share more insights or learned lessons.</p> <p>Important notice: It is only about my experience, so some things may not apply to what other PMs are experiencing. Product Management is a vast discipline with different responsibilities across different companies and industries.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-sophomore-year/#identity-crisis","title":"Identity crisis","text":"<p>The more I read books or consume other content about Product Management, the more I ask myself, \"Am I even a real Product Manager?\" Sometimes I feel like a Jira backlog administrator, and sometimes like a Project manager who needs to go through and respond to dozens of emails daily and micro-manage to make everything work.</p> <p>There were a few moments when I wanted to switch back to Business Analysis, where I felt safer knowing which tools to use and what I could achieve with them. PM is responsible for everything but usually without any means of power. And the sense of powerlessness is devastating. You see multiple success stories around you and push more, but the outcome remains unchanged. So you start questioning your abilities which affect mental health.</p> <p>But the truth is that you can't build a solid house on sand. You can die heroically doing that but what for? The reasons may be lying outside, and I should not blame myself. Maybe. I know what I am capable of.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-sophomore-year/#people-often-dont-know-what-they-are-doing","title":"People (often don't) know what they are doing","text":"<p>I have naive assumptions that I am surrounded by professionals who know what and why they are doing. Mainly, I have never questioned higher management. I could argue with some decisions but never disagree with a general direction. I thought that the smartest guys in a room with dozens of years of experience and university degrees I only could dream of, knowing what they were doing. In reality, it is not always the case.</p> <p>That also applies to some peers from whom you expect to resolve some dependencies. If your team has an external dependency, you must put extra effort into managing this. It is not only about a schedule but also what and how it will be delivered (if delivered at all). And also, only some people care about mid or long-term consequences.</p> <p>I'm not too fond of the escalation. I want peers to align with each other, commit and follow and respect the commitment. Unfortunately, that is not often the case for various reasons: incompetence, lack of responsibility, and \"hidden agenda.\"</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-sophomore-year/#look-outside-and-share-what-you-see","title":"Look outside and share what you see","text":"<p>When you are developing an internal platform, you focus needs of a department or an entire organization. At some point, when we were at a crossroads, I understood that we were unlikely the ones who solely fought a similar problem. We cannot look into other internal platforms, but we can research how open-source and commercial solutions are trying to resolve the same issues.</p> <p>So I started revising any available materials: user and technical documentation, release notes, webinars, etc. I was particular about how they approached the functionality we already have and how they designed solutions we only plan to implement. Then I did a summary and presented it to the team. There were a lot of insights during those sessions. It was not about attempts to \"re-use\" someone's design but more about questioning our past decisions and discussing future ones. That gives additional perspective on many things we have taken for granted.</p> <p>Also, comparing our internal platform with market solutions has triggered revisiting the entire product vision. Ok, this is what those guys are providing - who are we compared with them? We are not competing with them, but the comparison can encourage the team. Something we did better (from our perspective), something we need to learn from them. But we can be proud of what we build, which has some potential to contend in the market.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-sophomore-year/#validate-architecture-design","title":"Validate Architecture design","text":"<p>If I provided enough input with business, functional, and non-functional requirements, I would expect tech guys would design the right architecture without my interference. But now I am sure a PM needs to participate or at least validate an outcome of the architecture design process.</p> <p>I am not talking about doing tech design instead of architects. I don't have expertise in tech design, but now I have enough general knowledge and courage to ask straightforward questions about every aspect of it. Ask questions and challenge them against the business needs that solution will cover.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-sophomore-year/#product-vision-clash","title":"Product vision clash","text":"<p>Product management is not only about producing your own vision but about adapting and nurturing others' vision as your own, from my perspective. PM's vision is not existing in a vacuum, as stakeholders ( especially C and V-level roles) are guiding and impacting it.</p> <p>In Year One, I mentioned taking responsibility for a previous product vision and pushing it further. But at some point, you come up with your own vision, which may not match the management stakeholder's view. And here you whether agree and adopt that vision or continue pursuing your vision, but somewhere else.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-sophomore-year/#afterword","title":"Afterword","text":"<p>And again, I am sharing the negative mostly. It is not all bad. Positive stuff results in all other articles, posts, workshops I am doing, and the feedback I get. That keeps me going. Let's see what this year will bring.</p> <p>Take care,</p> <p>Ilya</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-year-one/","title":"Product Manager: Year One","text":"<p>One year has passed since I was promoted to a Product Manager position: first six months as an Associate (a Junior grade), and then I stepped in as a fully-fledged Product Manager. And that was a drastic shift that made me revisit some aspects of my work and added a new dimension to my view on product development.</p> <p>In this essay, I want to summarize my experience with the insights I collected throughout the year. Some of them might be obvious to a more experienced audience. But for me, some were revelations, and some were hugely underestimated initially. It is a good exercise to conduct such a personal retrospective, and others can benefit from that as well.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-year-one/#lack-of-resources-is-permanent-live-with-that","title":"Lack of resources is permanent - live with that","text":"<p>During the meetings with senior management, some Product Managers from other teams always complained about needing more people to complete their goals. It is a big problem that cannot be resolved immediately. But at some point, that becomes irritating. Lacking human resources should not become a constant excuse for missing business objectives.</p> <p>I was also among the complainers at first. Then I realized a better strategy to focus on what you can achieve with the current amount of people in the team. Some objectives require a lot of people involved to get the right things done at the right time. But some of the objectives also can be decomposed and addressed with a current team capacity. Also, a business need can be handled in many ways, not always with hundreds of dev hours or story points spent on new features. You need some space to think out of the box and have the trust of the senior stakeholders in you and your team to find the right solution within current constraints.</p> <p>I asked myself, \"What should we not do or stop doing to achieve something?\" instead of \"What should we do?\". Do more with less. That is my motto right now. I know what I would do with more developers in my teams. But I have a strategy in case of decreasing the team's capacity even more.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-year-one/#lights-on-work-is-a-real-threat-to-product-development","title":"\"Lights-on\" work is a real threat to product development","text":"<p>Support activities and tech debt can bite off a large piece of a team's capacity and defocus them from new product functionality. You can't avoid this, unfortunately. The best way to mitigate this is to forecast how much that might take in future iterations. But this is a challenging task. You can handle tech debt by splitting some fixed amount of dedicated efforts for each development sprint or having a full sprint once in a quartal. The support is much more challenging to handle, especially if you have legacy service with few people knowing how to work with it. And if you are an infrastructure team (that is my case). It is impossible to foresee the number of bugs, feature requests, and questions from other teams and customers. Each with the highest priority, of course. That can block the development of new features and break all the plans you committed before.</p> <p>The only way I found is to become ruthless in filtering \"urgent\" support items to complete. No more Mr. Nice Guy. You must become a gateway that needs to be passed so a team will take a support item, not from the queue. I am that guy who will stand against your request, even if it is crucial until you prove it is a real priority. Of course, you can go upstairs and push it through via higher management, but I will fight till the end to protect my team's backlog.</p> <p>Of course, I expected that pressure. But the real tension here is what surprised me.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-year-one/#hell-of-constant-replanning","title":"Hell of constant replanning","text":"<p>Planning is a huge topic I would like to cover in separate essays. For now, I constantly revised a year's roadmap and quarter plans. There are dozens of reasons why that happens, but in the end, I get nothing but frustration.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-year-one/#being-without-mentorship-sucks","title":"Being without mentorship sucks","text":"<p>My quick promotion to a standalone Product Manager happened before my mentor left the organization I am working in. So I stepped into his role and found myself in a vacuum. There is no senior product manager to manage me, and next-level VP management is a bit away from my day-to-day activities. They could help me with my questions. I am not questioning their good attitude. They have a broader view, and diving into a low-level of details is complicated: either because of lacking knowledge in my domain or having a more technical than product-oriented background.</p> <p>That does not mean I am alone and no one wants or can help me. The organization's product management process is well-defined but can't answer all the questions. Asking other PMs gives little as we are acting in a more isolated way and not aware of each other specifics.</p> <p>Recently, Q&amp;A sessions were introduced where I can fire my more-or-less stupid questions and get helpful responses from different audiences: POs, BAs, operational managers, etc. However, I would like a parental figure to sit down with me and say: \"Hey, son, stop doing this stupid shit. Here is what I'd suggest\u2026\".</p> <p>It may be for the best. In another year, I will let you know.</p>","tags":["Product Management","Career"]},{"location":"posts/product-manager-year-one/#afterword","title":"Afterword","text":"<p>Those are not all insights I have gotten during my first year in a Product Manager's shoes. And not all of them are as negative as I described above. It just appeared when I started writing this piece that the most pessimistic things appeared on the plate. I have gained much experience and still need additional time to analyze some things. I will be glad to share that with you here.</p> <p>Take care,</p> <p>Ilya </p> <p>Baby Vectors by Vecteezy</p>","tags":["Product Management","Career"]},{"location":"posts/reading-gharajedaghi-system-thinking/","title":"Thoughts about J. Gharajedaghi\u2019s \"System Thinking\"","text":"<p>This is a new rubric in my blog as I tried to avoid any posts about specific books before. I am taking some notes about the best books I have read. But those are not for the public eye. So this piece was not originally planned to be published. I just feel a need to share something with the world after I read a book in the title. Because that was a wonderful but pretty tough experience.</p> <p>Before we begin, let\u2019s make clear that:</p> <ul> <li>It is not a review. I will not write about bad books in my blog. By default, any book which has a separate essay is worth reading. Period.</li> <li>That will be in the form of an internal dialog.</li> </ul> <p>OK. What is the full title of this book?</p> <p>\u201cSystem Thinking: Managing Chaos and Complexity: A Platform for Designing Business Architecture\u201d by Jamshid Gharajedaghi, 3rd edition</p> <p>Nice. How did you learn about this book?</p> <p>A few years ago when I was listening to a podcast with a guest talking about System Thinking. He stated that the book is quite hard to read and should be considered as a final bullet after you have already read other sources. I accepted the challenge and bought the book on Amazon.</p> <p>I guess you read something about System Thinking before, right?</p> <p>Correct, I read a few books before. So I considered myself mature enough to have a shot at something more serious on that topic. I was too naive. Gharajedaghi\u2019s \u201cSystem Thinking\u201d at the same time was an exciting and difficult reading experience. It took me more than a year to read those 376 pages.</p> <p>Oh. Why was that so harsh?</p> <p>Several reasons. First of all, the topic itself is quite complex. Secondly, it is not an introductory book. It expects that you are familiar with a lot of concepts. Third, a written language. I am not a native English speaker so I can judge only from my reading experience but it was hard to pass through some passages. I consulted with an English dictionary a lot. Some word choices and syntax constructions confused me. I will not dive into examples, but \u201cdissemination of power\u201d sounds weird to me. In this context, \u201cdissemination\u201d means \u201cdistribution\u201d, I get it. And this is a very lightweight example.</p> <p>Also, I mistakenly approached this book as non-fiction. It is neither non-fiction nor a scientific reading. It is something beyond. Two times I re-started the reading and my third attempt was successful because I changed the reading approach.</p> <p>The thing is that when you stop reading for a week at least, it is difficult to jump back to the context. Just because of how deep this book goes you need to stay focused until the end or you go out. With my 3rd attempt, I started making summaries of the most complex chapters. If I stopped reading even for a few days, I did a recap of the previous chapters to dive in again. And that worked out for me.</p> <p>Now tell us more about the book</p> <p>Chapters 1 and 2 serve as an introduction to systems and the movement toward System Thinking. But that is not an introduction for beginners because it does not cover the basics. You will get a general idea about the whole thing, but that will not prepare you for what comes next.</p> <p>Chapters 2-9 are more theoretical. It uncovers concepts of sociocultural systems and different modes of thinking to understand those systems. And this is the hardest part of the book, where I failed 2 times and had to start reading again. Some thoughts are repeated in different parts of the book, but it is absolutely necessary to read those chapters carefully.</p> <p>Chapters 10-14 are the business cases from Jamshid Gharajedaghi\u2019s outstanding consulting experience. It is more relaxing reading than the preceding theoretical part and is more about applying that theory in practice. My only concern is that those cases focus on the \u201cTO-BE\u201d part, skipping the \u201cformulating the mess\u201d and how the implementation happened (if happened). It is a big deal to design the right solution but that needs to be implemented and delivered at the end. Unfortunately, that is not fully addressed in the book, but for obvious reasons: you will need another book.</p> <p>Also, some cases took place in the 1990s, and since those times some \u201cTO-BE\u201d suggestions are considered more like the industry standards today rather than insights. But this is a good sign actually as they have proved to be vital.</p> <p>What did you learn from this book?</p> <p>Not an easy question. I will definitely keep revisiting my notes and some chapters of the book. But I will try to formulate what I have so far:</p> <ol> <li> <p>Most business and management concepts has been originated in the 1950-1970s. Currently, we just keep re-inventing the wheel and putting it in a new colorful package to sell as courses. It is not a new idea either, but I have just become more convinced about that.</p> </li> <li> <p>As an IT person, I approached each system as software. Then, while reading more and more about System Thinking I started considering a system as something more technically advanced: a flight or an F1 car. This book gives a wider perspective on a higher level - sociocultural systems. Each organization is a sociocultural system. And that itself is a more complex being than any piece of software.</p> </li> <li> <p>5 Dimensions of social systems and the importance of their generation and distribution (\u201cdissemination\u201d): wealth, power, knowledge, beauty, value. If the first three are pretty obvious, beauty and value give me an additional perspective when now looking at social systems.</p> </li> <li> <p>Distribution without effective production can only result in equal distribution of poverty.</p> </li> <li> <p>The importance of communicating the shared image as leverage to transformation.</p> </li> <li> <p>Formulating the mess is sometimes more important than designing a solution. A quote by Russel L. Ackoff mentioned in the book: \u201cWe fail more often not because we fail to solve the problems we face but because we fail to face right problems\u201d.</p> </li> </ol> <p>Again, that might seem pretty obvious but it is really huge. Further I keep going, and the more I keep asking myself what the hell I am doing and for what reason someone needs that (shit).</p> <p>Let\u2019s stop on those six. But there are more, definitely.</p> <p>You mentioned that this book is not for beginners. What do you recommend for people who want to get acquainted with System Thinking?</p> <p>\u201cThinking in Systems\u201d by Donella H. Meadows. No doubt, the best introduction to this topic.</p> <p>Then start looking for other materials to dive deeper - you need to have some background for Gharajedaghi\u2019. Don\u2019t repeat my mistakes.</p> <p>Take care,</p> <p>Ilya</p>","tags":["BA & PO","Career"]},{"location":"posts/sidekick-product/","title":"Sidekick product","text":"<p>Throughout my career, I participated in the development of a few supplements for so-called \u201cparent\u201d products. They were standalone services with their own, not big, but still considerable business value. Recently I realized that even though those supplement products were developed in different organizations and in different business areas they did have common traits. Moreover, they shared the same problems.</p> <p>It was something laying on the surface. Sometimes you shoot yourself in the foot twice before starting to see obvious things. What is the nature of those Sidekick products and do they inherit the problems of \u201cbigger brothers\u201d? Let us sort it out in this essay.</p>","tags":["Product Management"]},{"location":"posts/sidekick-product/#sidekicks-characteristics","title":"Sidekick\u2019s characteristics","text":"<p>A Sidekick product may appear near a \u201cbig\u201d product when there is an opportunity to address business needs that do not exactly lay on the main product direction. But still, such Sidekick can potentially bring additional value to the business.</p> <p>Here is a list of the characteristics for identifying a Sidekick:</p> <ul> <li>It can\u2019t exist without a \u201colder\u201d brother and it is very attached to it.</li> <li>It is considered to be an easy try to gain more with fewer efforts</li> <li>Quick development using already existing components and known practices</li> <li>Everyone is very excited about it (so far).</li> </ul> <p>At the same time, those points are Sidekick\u2019s strengths and the pitfalls hidden under the surface. What I learned from my experience (in a hard way), the wrong decisions from the start, even for the supplement, are very difficult to handle on the way. Similar to the \u201cbig\u201d products, the sidekicks should not be treated carelessly.</p>","tags":["Product Management"]},{"location":"posts/sidekick-product/#sidekick-pitfalls","title":"Sidekick pitfalls","text":"<p>1. Flexible vision &amp; great expectations</p> <p>After starting building something \u201cquick and dirty\u201d you might very soon realize that it is not \u201cquick\u201d anymore. And this becoming dirtier and dirtier. It is a common situation for any product, but for the Sidekicks that is more fatal compared to others. Different sides push it in different directions which have been not considered from the beginning.</p> <p>Sometimes that is for good: history knows a lot of examples when a Sidekick resulted in a successful standalone product or even a new business. But history usually avoids mentioning a graveyard of the products with a such \u201cflexible\u201d vision.</p> <p>Stakeholders are excited about the new opportunities. Each has its own view on what should be added to make a proper solution. That causes an overload and losing the initial vision of the product. In the end, that leads to failed expectations from different parties.</p> <p>You\u2019d better know what you are going to build. And also, be pretty confident about what you are not. </p> <p>2. Prolongating MVP development</p> <p>This is an obvious consequence of Point 1. Unnecessary prolongation of an MVP stage is a common disease in any industry. But with a Sidekick, it is relatively easy to fall into an endless extending/redoing cycle. The unclear vision and desire to address the needs of every stakeholder makes the exit very complicated.</p> <p>On the other hand, if your MVP appears to be not very \u201cV\u201d (viable/valuable) because of the rush and not listening to the right guys, then welcome to the Sidekicks\u2019 graveyard.</p> <p>3. Lack of architecture guidance</p> <p>A Sidekick is expected to have a very quick time-to-market period. And such phrases as \u201cLet\u2019s deal with (put your option) later\u201d on the MVP stage, along with quick and unjustified tech decisions, could lead to the exhausting on-the-fly architecture changes. Lack of the proper architecture guidance from the start may cause time-consuming refactorings when a Sidekick becomes mature and need to address more complex functionality.</p> <p>Especially that hurts when your go live with it. Your team quickly realizes itself buried in the problems with scaling, performance, and integration. And the Security team is knocking on your door with a bunch of found vulnerabilities to be resolved ASAP. I bet you haven\u2019t got that planned initially.</p> <p>4. Team unfocus</p> <p>If you launch a Sidekick be sure your team will develop it along with the main product. I don\u2019t have any data on this, so let it be my assumption: you are unlikely to get a new team or new hires for a supplement. That might happen in later stages when a Sidekick proves its stake. But for the beginning, you are likely to handle that with what you have.</p> <p>Considering points 1-3, you can imagine how that affects the main product. All that might seem to be a temporary shift in the priority to push the Sidekick as much as possible and return to the mainline later. In the worst case, you found yourself chasing two hares with low chances to catch any.</p> <p>5. Selecting a new technology stack</p> <p>The team might be eager to try new frameworks, programming languages, and libraries with a Sidekick. Nothing bad with that, but you should consider the risks which appear there. Lack of experience may introduce architectural issues and a bigger tech debt to be resolved if the Sidekick transition to a mature \u201cproduction-ready\u201d service. The cost might be too high.</p> <p>Also, the learning curve for new technology can be very long. That causes potential issues with implementing complex features so the team will be not able to resolve that without outside help. That is OK when someone in your organization has experience with that stack and can dedicate some time to help you. But if not then you are in trouble. Hiring a new developer for that purpose or engaging a contractor/freelancer brings risks to a new level. Waiting until the team will be experienced enough to handle the complex feature might not be an option as well.</p> <p>6. Selecting the same stack as the \u201cParent\u201d</p> <p>The team is familiar with the technology so we do expect that even complex issues will be resolved in the known domain. However, there are new risks here:</p> <ul> <li>Bringing bad practices from the Parent to the Sidekick.</li> <li>Unnecessary tying the Parent with the Sidekick.</li> </ul> <p>Using the \u201cParent\u201d stack seems to be an easier way. And, actually, it does. However, there might be cases when some solutions could be done better (quicker and with more quality) if developers were not looking back on the Parent and bringing some practices from it. Those practices might be good there, but it is not always the case for the Sidekick.</p> <p>Also, tying the Sidekick with the Parent on the program and infrastructure levels can result in a very painful divorce. Such kind of migration will freeze the implementation of new features and cost many efforts.</p> <p>The best recipe is not to be afraid to bring some innovation and explore new technological capabilities for a new product. But ensure that someone in the team or in the organization can guide you in that journey.</p>","tags":["Product Management"]},{"location":"posts/sidekick-product/#outro","title":"Outro","text":"<p>The main idea here is \u201cplease do not underestimate the complexity of a Sidekick product\u201d. Treat it as seriously as a \u201cbig\u201d product by investing time into defining vision and solid architecture from the start. This is not a recipe for success, but it still increases Sidekick\u2019s chances to go to Production and bring expected value to customers.</p> <p>Next time I will share with you a real case of such a Sidekick. Stay tuned!</p> <p>Take care,</p> <p>Ilya</p> <p>Happy Vectors by Vecteezy</p>","tags":["Product Management"]},{"location":"posts/tips-for-junior-ba-interview/","title":"Pre-interview tips for Junior Business Analysts","text":"<p>Recently I was looking for a Junior Business Analyst to join my team. I considered candidates with little or no experience in IT. And that was an excellent experience for me. For the first time in my career I:</p> <ul> <li>wholly owned job requirements for the position</li> <li>made a final decision to hire someone or not</li> <li>was not doing the tech part of an interview</li> <li>interviewed Junior-level specialists.</li> </ul> <p>It is different from interviewing a Middle or Senior BA. You can discuss various topics with more experienced professionals: practical cases, challenges, techniques, recent articles, etc. But that is hardly applicable for the Juniors as they can share only their background and knowledge of theory with the ability to apply that in practice, at the very least.</p> <p>The main proof of their ability is a diploma project if they have previously finished some business analysis courses. Another option is a test task or even a pet project. And be well prepared for an interview, of course.</p> <p>I was not hosting a part with Business Analysis questions, so I focused on the written evidence and carefully listened to the interviewee. After I finalized my feedback for each candidate, I realized some missteps which occurred in a number of the interviews. Even though they seem to be obvious, it is important to highlight them and provide my suggestions.</p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#invest-your-efforts-in-formatting-and-language-of-your-testdiploma-project","title":"Invest your efforts in formatting and language of your test/diploma project","text":"<p>Whether it is a diploma project from BA courses or a practical task given to you before an interview: you must do your best.</p> <p>The first impression is essential. You can provide a better experience for the readers, which is your advantage over other candidates.</p> <p>Many years ago, I was helping my mentor with reviewing the practical tasks of candidates who applied for a Junior BA position. I was shocked when he refused to read a document further without a table of contents, so a candidate missed the chance. The mentor did not care how good the work might be. That was a crucial criterion for him to stop wasting time and proceed to the next candidate.</p> <p>From my perspective, it is unfair not to give a chance to a specification with some formatting issues. But that situation states that you never know who will look at your specification document and what their expectations are. </p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#be-able-to-explain-the-requirements-documentation-approaches-you-use","title":"Be able to explain the requirements documentation approaches you use","text":"<p>\"We did that because our mentor told us\" - is a wrong answer about the decision to proceed with user stories instead of use cases in your test/diploma project. You should be ready to justify a used approach considering its advantages and disadvantages.</p> <p>An interviewer can ask you to compare two approaches and express your opinion on which is better. The fun part is that there is no correct answer; in Business Analysis, some things may work depending on a project context. Just share your opinion, even if you have little experience using both. That is a tricky way to test your current understanding of those techniques.</p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#if-your-diploma-project-is-group-work-make-your-contribution-clear","title":"If your diploma project is group work, make your contribution clear","text":"<p>Business Analysis course students tend to write their diploma projects in a group of 3-5 persons. Nothing wrong with that. But for me, that makes assessing a candidate's skills problematic.</p> <p>\"We did all the stuff together\" - a lousy answer to a question on how you organized work on the diploma project. That gives me no clue why I should hire you instead of your group mates.</p> <p>Working in a group of BAs is a valuable skill, but that must be a well-organized process with a clear contribution from each peer. You'd better sign the parts you made with your name and be prepared to explain others' parts as your own. </p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#write-your-diploma-project-in-english-for-non-native-speakers","title":"Write your diploma project in English (for non-native speakers)","text":"<p>If you plan to start your BA career in an international company or company with international customers, write your diploma project in English. As a Junior BA, you are unlikely to be involved much in communication with stakeholders from the beginning. Your time to shine will come a bit later. </p> <p>More time you will spend on specifying and documenting requirements. You'd better provide additional proof of your written English.</p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#study-different-sources-of-knowledge","title":"Study different sources of knowledge","text":"<p>It is painful to hear how a prospective candidate fails to explain the meaning of stakeholder requirements and their place in the requirements hierarchy. I think that happens because most BA students read only the Wiegers*, in which stakeholder requirements are not considered a subject of the requirements structure and are implied to be a part of the business requirements. Wieger's definition is fine, but you'd better study BACCM** by IIBA (free) and learn the modern industry-agreed standard.</p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#when-you-send-files-dont-use-proprietary-file-formats","title":"When you send files, don't use proprietary file formats","text":"<p>One candidate sent an \"eap\" file as a documented example to prove their BA skills. Once I got that file from recruiters, I realized I lacked the software to open it on my laptop. I quickly googled that \"eap\" is an extension for Enterprise Architect files. It is a well-known industry tool, but neither I have worked with it nor my organization. So what will my next steps be? To install Enterprise Architect, register, start a 30 days trial, learn how to use it, and finally open that file for a review, I guess.</p> <p>But that never happened. I switched to an assessment of other candidates, and that file's content remains a mystery.</p> <p>You can blame me, but I value my time and want other parties to respect it. Please use standard file formats (like PDF, docx, etc.) or something that can be opened in a web browser (without mandatory sign-up and providing my credit card information). Remember, as a Junior specialist, you compete for a job with many other talented people. And you are not in a position to demand more time than the others. Deal with that.</p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#do-your-homework","title":"Do your homework","text":"<p>Not having questions for an interview is a bad sign for a hiring manager. Please prepare some questions about the company, the project/product, the team structure, your future responsibilities, organization processes, etc. Be bold and ask any relevant question which comes to your mind.</p> <p>If it is a product-oriented company, then study any available marketing materials about its products and value proposition you find on the Internet. Nowadays, organizations are largely investing in content marketing, so it is easy to find some hooks to help you formulate your questions.</p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#as-conclusion","title":"As conclusion","text":"<p>If you have not got a job offer after an interview or your application hasn't even been considered, that does not mean you are a terrible business analyst. In 80% of cases, your skills do not fit a particular position. In the other 20%, you might not have done your homework, the interview went surprisingly bad, or it was a combination of these factors.</p> <p>Consider rejection as a blessing and keep going. Seek, and you shall find.</p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#references","title":"References","text":"<p>*Karl Wiegers and Joy Beatty \u201cSoftware Requirements\u201d, 3rd edition</p> <p>**Business Analysis Core Concept Model</p> <p>Image from Cv Vectors by Vecteezy</p>","tags":["BA & PO","Career"]},{"location":"posts/tips-for-junior-ba-interview/#change-history","title":"Change history","text":"<ul> <li>2022-02-06: Initial version published</li> <li>2023-05-10: Second revision published</li> </ul>","tags":["BA & PO","Career"]},{"location":"posts/announcements/new-mkdocs-blog-version/","title":"New Blog version with MkDocs","text":"<p>In early 2021, at the climax of the Covid-19 outbreak, locked up in the apartment with my wife and 6-month-old kid, I decided to have my blog. I will not dive into the reasoning there. I decided that sharing my thoughts on the media platform I own was a good idea.</p> <p>My initial requirements were:</p> <ul> <li>free hosting</li> <li>own domain</li> <li>control over the content and publishing capabilities</li> </ul> <p>A static site generator, GitHub pages, and a custom domain name cover those points. Having a static site generator benefits in supporting the Markdown syntax, which I am using to write my notes. Plus, it is an additional technical challenge to configure and support that all by myself.</p> <p>So my first choice was pretty obvious...</p>","tags":["Announcement"]},{"location":"posts/announcements/new-mkdocs-blog-version/#jekyll-era-2021-2022","title":"Jekyll era (2021-2022)","text":"<p>Jekyll\u00a0is a very popular static site generator with multiple plugins and themes. It took me a few days to become familiar with it. My experience with building a test blog project in Django helped me there.</p> <p>It possesses an entire ecosystem where you can do almost everything. And I was happy with that, except for one thing that appeared to be critical: Jekyll is written in Ruby. And I am a Python person.</p> <p>So I found myself in an environment that I was not used to. You don't need to know Ruby to use Jekyll. But I felt uncomfortable while configuring or managing dependencies.</p> <p>So I have made another obvious decision: I need Jekyll but written in Python.</p> <p>Github repo with Jekyll blog</p>","tags":["Announcement"]},{"location":"posts/announcements/new-mkdocs-blog-version/#nikola-era-2022-2023","title":"Nikola era (2022-2023)","text":"<p>There are enough Jekyll replacements in Python, but none have such a big community and extensive support. So I had to look for something really supported by an open-source community.</p> <p>Nikola\u00a0appeared on my radar, and it seemed to be a good choice. The migration from Jekyll was seamless. I just had to change the URLs of my previous one and configure the redirection. Also, Nikola contains most of the features out of the box, so you don't need to install additional plugins.</p> <p>I was happy with Nikola, and the only thing that made me consider another option: moving away from the blog post format. With the API Design series, I started collecting related essays into sections in a kind of e-book format. Technically, Nikola allows doing that. I just haven't found a theme I need.</p> <p>As I already mentioned, Nikola does not have as much support as Jekyll does. So there are not many themes. Some of them are migrated Jekyll themes. So the only choice was to extend an existing one or create my custom Nikola theme. But I did not want to deal with CSS, Jijnja templates, and other UI stuff.</p> <p>So I decided to consider different content platforms which can easily support my ideas.</p> <p>Github repo with Nikola blog</p>","tags":["Announcement"]},{"location":"posts/announcements/new-mkdocs-blog-version/#mkdocs-era-2023-now","title":"MkDocs era (2023-now)","text":"<p>I keep an eye on documentation tooling, and\u00a0MkDocs\u00a0has been on my radar for some time. It is based on Python and is more straightforward than Nikola, where I could not remember a CLI command to create a new article in Markdown and sometimes struggled with configuration. Also, it has a built-in search which becomes necessary with growing content.</p> <p>MkDocs is built for project documentation, and that is what I need. And it also has a fabulous\u00a0Material\u00a0theme with a fancy design, dark theme, and many other features.</p> <p>The main challenge has been keeping the blog format as it is not something out-of-the-box. The Material theme provides blog capabilities but as a paid feature. The blog itself is net-negative, so I don't want to spend more than a domain price. So I have found a free alternative\u00a0mkdocs-blogging-plugin. Just a few steps, and the blog is incorporated in MkDocs.</p> <p>However, the content migration wasn't as seamless as it was from Jekyll and Nikola. I had to reformat each post's metadata and headings. Not a huge amount of work - but some routine stuff anyway.</p> <p>Github repo with MKDocs blog</p>","tags":["Announcement"]},{"location":"posts/announcements/new-mkdocs-blog-version/#whats-next","title":"What's next","text":"<p>I am happy with the current look and plan to explore different themes, plugins, and customizations. MkDocs' configuration is managed via YAML and has already expanded. So I will look for a way to split the configuration and automate adding new sections and pages.</p> <p>Also, I am not sure that MkDocs will be my final choice. There is a particular joy in exploring new things, even when they are static site generators.</p> <p>Take care,</p> <p>Ilya</p>","tags":["Announcement"]},{"location":"posts/announcements/updates-on-content-strategy/","title":"Updates on Content Strategy","text":"<p>There are some changes in the content allocation across my Blog and other social media platforms. That will impact what and where you will see.</p> <p>LinkedIn: no more articles, more short posts</p> <p>I am no longer publishing any articles directly on Linkedin. There are a few reasons:</p> <ul> <li>LinkedIn is not promoting its native articles enough. I did some research and compared the metrics - LinkedIn articles are getting less traction than the posts. I am not chasing the big numbers, but it is disappointing when people don't see good materials.</li> <li>Native LinkedIn articles are not as good at editing and publishing as other platforms.</li> <li>LinkedIn is more about quick \"Tik-tok\"-like content: short posts and videos, memes, and more generic stuff. It is not a place for longer and more complex articles.</li> </ul> <p>However, LinkedIn will stay as my primary social platform. I will move articles to different platforms but continue publishing links and short posts there.</p> <p>Medium: my new social platform</p> <p>As some of you probably noticed, I published the latest part of the No-code series on Medium (please feel free to subscribe). Now it is a place where I will publish my articles. In a short time, I will migrate there my previous posts as well.</p> <p>The reason is pretty simple: to attract a new audience. Even though the competition there is high, Medium is a better place for a mid-length reading about professional topics.</p> <p>Blog: how it will differ from Medium</p> <p>My Blog will continue to be a central hub for my content. I will continue to publish some pieces as articles on Medium, then revise and transform them into more comprehensive material available on my Blog only.</p> <p>Also, the Blog itself will soon be transformed. I keep exploring my areas of interest:</p> <ul> <li>product management</li> <li>business analysis &amp; product ownership</li> <li>low &amp; no-code</li> <li>API and integration</li> </ul> <p>Each area will be restructured in the way of a continuously expanding e-book. At least, that is how I see it.</p> <p>Instagram: a bit more personal</p> <p>Yes, I have an Instagram account. I am not posting much there. But I will keep re-posting stuff coming from LinkedIn and Medium. Sometimes there will be more personal stuff about my hobbies. You can also follow me there.</p> <p>Twitter: a proxy</p> <p>And I have a Twitter account. Here I am just mirroring the content from LinkedIn and Medium. If you are a Twitter person, you can follow me there to stay tuned.</p> <p>Language policy</p> <p>Last but not least. English is my content's primary language, even though most of my audience is Russian-speaking. Sometimes I will write posts and share valuable materials written in Russian. But that will happen mainly on LinkedIn.</p> <p>Take care,</p> <p>Ilya</p>","tags":["Announcement"]},{"location":"product-management/product-management/","title":"Essays about Product Management","text":"<p>Here are my recent publications relared to the topic:</p> <ul> <li>Sidekick product: I think I have found a new categorization of supplemental products</li> <li>Product Manager: Year one: sharing my experience after the first year of being a Product manager</li> <li>Product Manager: Sophomore year: some insignts from the second year of me being a Product Manager</li> </ul>"}]}